{"version":3,"file":"6731.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lumino/application/dist/index.es6.js"],"sourcesContent":["import { CommandRegistry } from '@lumino/commands';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Widget, ContextMenu } from '@lumino/widgets';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * The namespace for array-specific algorithms.\n */\nvar ArrayExt;\n(function (ArrayExt) {\n    /**\n     * Find the index of the first occurrence of a value in an array.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param value - The value to locate in the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first occurrence of the value, or `-1`\n     *   if the value is not found.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = ['one', 'two', 'three', 'four', 'one'];\n     * ArrayExt.firstIndexOf(data, 'red');        // -1\n     * ArrayExt.firstIndexOf(data, 'one');        // 0\n     * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n     * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n     * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n     * ```\n     */\n    function firstIndexOf(array, value, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var span;\n        if (stop < start) {\n            span = stop + 1 + (n - start);\n        }\n        else {\n            span = stop - start + 1;\n        }\n        for (var i = 0; i < span; ++i) {\n            var j = (start + i) % n;\n            if (array[j] === value) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.firstIndexOf = firstIndexOf;\n    /**\n     * Find the index of the last occurrence of a value in an array.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param value - The value to locate in the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the last occurrence of the value, or `-1`\n     *   if the value is not found.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the front of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = ['one', 'two', 'three', 'four', 'one'];\n     * ArrayExt.lastIndexOf(data, 'red');        // -1\n     * ArrayExt.lastIndexOf(data, 'one');        // 4\n     * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n     * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n     * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n     * ```\n     */\n    function lastIndexOf(array, value, start, stop) {\n        if (start === void 0) { start = -1; }\n        if (stop === void 0) { stop = 0; }\n        var n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var span;\n        if (start < stop) {\n            span = start + 1 + (n - stop);\n        }\n        else {\n            span = start - stop + 1;\n        }\n        for (var i = 0; i < span; ++i) {\n            var j = (start - i + n) % n;\n            if (array[j] === value) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.lastIndexOf = lastIndexOf;\n    /**\n     * Find the index of the first value which matches a predicate.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first matching value, or `-1` if no\n     *   matching value is found.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findFirstIndex(data, isEven);       // 1\n     * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n     * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n     * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n     * ```\n     */\n    function findFirstIndex(array, fn, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var span;\n        if (stop < start) {\n            span = stop + 1 + (n - start);\n        }\n        else {\n            span = stop - start + 1;\n        }\n        for (var i = 0; i < span; ++i) {\n            var j = (start + i) % n;\n            if (fn(array[j], j)) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.findFirstIndex = findFirstIndex;\n    /**\n     * Find the index of the last value which matches a predicate.\n     *\n     * @param object - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the last matching value, or `-1` if no\n     *   matching value is found.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the front of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findLastIndex(data, isEven);        // 5\n     * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n     * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n     * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n     * ```\n     */\n    function findLastIndex(array, fn, start, stop) {\n        if (start === void 0) { start = -1; }\n        if (stop === void 0) { stop = 0; }\n        var n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var d;\n        if (start < stop) {\n            d = start + 1 + (n - stop);\n        }\n        else {\n            d = start - stop + 1;\n        }\n        for (var i = 0; i < d; ++i) {\n            var j = (start - i + n) % n;\n            if (fn(array[j], j)) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.findLastIndex = findLastIndex;\n    /**\n     * Find the first value which matches a predicate.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The first matching value, or `undefined` if no matching\n     *   value is found.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findFirstValue(data, isEven);       // 2\n     * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n     * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n     * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n     * ```\n     */\n    function findFirstValue(array, fn, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var index = findFirstIndex(array, fn, start, stop);\n        return index !== -1 ? array[index] : undefined;\n    }\n    ArrayExt.findFirstValue = findFirstValue;\n    /**\n     * Find the last value which matches a predicate.\n     *\n     * @param object - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The last matching value, or `undefined` if no matching\n     *   value is found.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the front of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findLastValue(data, isEven);        // 2\n     * ArrayExt.findLastValue(data, isEven, 4);     // 4\n     * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n     * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n     * ```\n     */\n    function findLastValue(array, fn, start, stop) {\n        if (start === void 0) { start = -1; }\n        if (stop === void 0) { stop = 0; }\n        var index = findLastIndex(array, fn, start, stop);\n        return index !== -1 ? array[index] : undefined;\n    }\n    ArrayExt.findLastValue = findLastValue;\n    /**\n     * Find the index of the first element which compares `>=` to a value.\n     *\n     * @param array - The sorted array-like object to search.\n     *\n     * @param value - The value to locate in the array.\n     *\n     * @param fn - The 3-way comparison function to apply to the values.\n     *   It should return `< 0` if an element is less than a value, `0` if\n     *   an element is equal to a value, or `> 0` if an element is greater\n     *   than a value.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first element which compares `>=` to the\n     *   value, or `length` if there is no such element. If the computed\n     *   index for `stop` is less than `start`, then the computed index\n     *   for `start` is returned.\n     *\n     * #### Notes\n     * The array must already be sorted in ascending order according to\n     * the comparison function.\n     *\n     * #### Complexity\n     * Logarithmic.\n     *\n     * #### Undefined Behavior\n     * Searching a range which is not sorted in ascending order.\n     *\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function numberCmp(a: number, b: number): number {\n     *   return a - b;\n     * }\n     *\n     * let data = [0, 3, 4, 7, 7, 9];\n     * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n     * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n     * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n     * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n     * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n     * ```\n     */\n    function lowerBound(array, value, fn, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var begin = start;\n        var span = stop - start + 1;\n        while (span > 0) {\n            var half = span >> 1;\n            var middle = begin + half;\n            if (fn(array[middle], value) < 0) {\n                begin = middle + 1;\n                span -= half + 1;\n            }\n            else {\n                span = half;\n            }\n        }\n        return begin;\n    }\n    ArrayExt.lowerBound = lowerBound;\n    /**\n     * Find the index of the first element which compares `>` than a value.\n     *\n     * @param array - The sorted array-like object to search.\n     *\n     * @param value - The value to locate in the array.\n     *\n     * @param fn - The 3-way comparison function to apply to the values.\n     *   It should return `< 0` if an element is less than a value, `0` if\n     *   an element is equal to a value, or `> 0` if an element is greater\n     *   than a value.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first element which compares `>` than the\n     *   value, or `length` if there is no such element. If the computed\n     *   index for `stop` is less than `start`, then the computed index\n     *   for `start` is returned.\n     *\n     * #### Notes\n     * The array must already be sorted in ascending order according to\n     * the comparison function.\n     *\n     * #### Complexity\n     * Logarithmic.\n     *\n     * #### Undefined Behavior\n     * Searching a range which is not sorted in ascending order.\n     *\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function numberCmp(a: number, b: number): number {\n     *   return a - b;\n     * }\n     *\n     * let data = [0, 3, 4, 7, 7, 9];\n     * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n     * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n     * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n     * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n     * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n     * ```\n     */\n    function upperBound(array, value, fn, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var begin = start;\n        var span = stop - start + 1;\n        while (span > 0) {\n            var half = span >> 1;\n            var middle = begin + half;\n            if (fn(array[middle], value) > 0) {\n                span = half;\n            }\n            else {\n                begin = middle + 1;\n                span -= half + 1;\n            }\n        }\n        return begin;\n    }\n    ArrayExt.upperBound = upperBound;\n    /**\n     * Test whether two arrays are shallowly equal.\n     *\n     * @param a - The first array-like object to compare.\n     *\n     * @param b - The second array-like object to compare.\n     *\n     * @param fn - The comparison function to apply to the elements. It\n     *   should return `true` if the elements are \"equal\". The default\n     *   compares elements using strict `===` equality.\n     *\n     * @returns Whether the two arrays are shallowly equal.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * Modifying the length of the arrays while comparing.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let d1 = [0, 3, 4, 7, 7, 9];\n     * let d2 = [0, 3, 4, 7, 7, 9];\n     * let d3 = [42];\n     * ArrayExt.shallowEqual(d1, d2);  // true\n     * ArrayExt.shallowEqual(d2, d3);  // false\n     * ```\n     */\n    function shallowEqual(a, b, fn) {\n        // Check for object identity first.\n        if (a === b) {\n            return true;\n        }\n        // Bail early if the lengths are different.\n        if (a.length !== b.length) {\n            return false;\n        }\n        // Compare each element for equality.\n        for (var i = 0, n = a.length; i < n; ++i) {\n            if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n                return false;\n            }\n        }\n        // The array are shallowly equal.\n        return true;\n    }\n    ArrayExt.shallowEqual = shallowEqual;\n    /**\n     * Create a slice of an array subject to an optional step.\n     *\n     * @param array - The array-like object of interest.\n     *\n     * @param options - The options for configuring the slice.\n     *\n     * @returns A new array with the specified values.\n     *\n     * @throws An exception if the slice `step` is `0`.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start`, `stop`, or `step` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 3, 4, 7, 7, 9];\n     * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n     * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n     * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n     * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n     * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n     * ```\n     */\n    function slice(array, options) {\n        if (options === void 0) { options = {}; }\n        // Extract the options.\n        var start = options.start, stop = options.stop, step = options.step;\n        // Set up the `step` value.\n        if (step === undefined) {\n            step = 1;\n        }\n        // Validate the step size.\n        if (step === 0) {\n            throw new Error('Slice `step` cannot be zero.');\n        }\n        // Look up the length of the array.\n        var n = array.length;\n        // Set up the `start` value.\n        if (start === undefined) {\n            start = step < 0 ? n - 1 : 0;\n        }\n        else if (start < 0) {\n            start = Math.max(start + n, step < 0 ? -1 : 0);\n        }\n        else if (start >= n) {\n            start = step < 0 ? n - 1 : n;\n        }\n        // Set up the `stop` value.\n        if (stop === undefined) {\n            stop = step < 0 ? -1 : n;\n        }\n        else if (stop < 0) {\n            stop = Math.max(stop + n, step < 0 ? -1 : 0);\n        }\n        else if (stop >= n) {\n            stop = step < 0 ? n - 1 : n;\n        }\n        // Compute the slice length.\n        var length;\n        if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n            length = 0;\n        }\n        else if (step < 0) {\n            length = Math.floor((stop - start + 1) / step + 1);\n        }\n        else {\n            length = Math.floor((stop - start - 1) / step + 1);\n        }\n        // Compute the sliced result.\n        var result = [];\n        for (var i = 0; i < length; ++i) {\n            result[i] = array[start + i * step];\n        }\n        // Return the result.\n        return result;\n    }\n    ArrayExt.slice = slice;\n    /**\n     * Move an element in an array from one index to another.\n     *\n     * @param array - The mutable array-like object of interest.\n     *\n     * @param fromIndex - The index of the element to move. Negative\n     *   values are taken as an offset from the end of the array.\n     *\n     * @param toIndex - The target index of the element. Negative\n     *   values are taken as an offset from the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `fromIndex` or `toIndex` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2, 3, 4];\n     * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n     * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n     * ```\n     */\n    function move(array, fromIndex, toIndex) {\n        var n = array.length;\n        if (n <= 1) {\n            return;\n        }\n        if (fromIndex < 0) {\n            fromIndex = Math.max(0, fromIndex + n);\n        }\n        else {\n            fromIndex = Math.min(fromIndex, n - 1);\n        }\n        if (toIndex < 0) {\n            toIndex = Math.max(0, toIndex + n);\n        }\n        else {\n            toIndex = Math.min(toIndex, n - 1);\n        }\n        if (fromIndex === toIndex) {\n            return;\n        }\n        var value = array[fromIndex];\n        var d = fromIndex < toIndex ? 1 : -1;\n        for (var i = fromIndex; i !== toIndex; i += d) {\n            array[i] = array[i + d];\n        }\n        array[toIndex] = value;\n    }\n    ArrayExt.move = move;\n    /**\n     * Reverse an array in-place.\n     *\n     * @param array - The mutable array-like object of interest.\n     *\n     * @param start - The index of the first element in the range to be\n     *   reversed, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   reversed, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or  `stop` index which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2, 3, 4];\n     * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n     * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n     * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n     * ```\n     */\n    function reverse(array, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n <= 1) {\n            return;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        while (start < stop) {\n            var a = array[start];\n            var b = array[stop];\n            array[start++] = b;\n            array[stop--] = a;\n        }\n    }\n    ArrayExt.reverse = reverse;\n    /**\n     * Rotate the elements of an array in-place.\n     *\n     * @param array - The mutable array-like object of interest.\n     *\n     * @param delta - The amount of rotation to apply to the elements. A\n     *   positive value will rotate the elements to the left. A negative\n     *   value will rotate the elements to the right.\n     *\n     * @param start - The index of the first element in the range to be\n     *   rotated, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   rotated, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `delta`, `start`, or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2, 3, 4];\n     * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n     * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n     * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n     * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n     * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n     * ```\n     */\n    function rotate(array, delta, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n <= 1) {\n            return;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        if (start >= stop) {\n            return;\n        }\n        var length = stop - start + 1;\n        if (delta > 0) {\n            delta = delta % length;\n        }\n        else if (delta < 0) {\n            delta = ((delta % length) + length) % length;\n        }\n        if (delta === 0) {\n            return;\n        }\n        var pivot = start + delta;\n        reverse(array, start, pivot - 1);\n        reverse(array, pivot, stop);\n        reverse(array, start, stop);\n    }\n    ArrayExt.rotate = rotate;\n    /**\n     * Fill an array with a static value.\n     *\n     * @param array - The mutable array-like object to fill.\n     *\n     * @param value - The static value to use to fill the array.\n     *\n     * @param start - The index of the first element in the range to be\n     *   filled, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   filled, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * #### Notes\n     * If `stop < start` the fill will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = ['one', 'two', 'three', 'four'];\n     * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n     * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n     * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n     * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n     * ```\n     */\n    function fill(array, value, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var span;\n        if (stop < start) {\n            span = stop + 1 + (n - start);\n        }\n        else {\n            span = stop - start + 1;\n        }\n        for (var i = 0; i < span; ++i) {\n            array[(start + i) % n] = value;\n        }\n    }\n    ArrayExt.fill = fill;\n    /**\n     * Insert a value into an array at a specific index.\n     *\n     * @param array - The array of interest.\n     *\n     * @param index - The index at which to insert the value. Negative\n     *   values are taken as an offset from the end of the array.\n     *\n     * @param value - The value to set at the specified index.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * An `index` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2];\n     * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n     * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n     * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n     * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n     * ```\n     */\n    function insert(array, index, value) {\n        var n = array.length;\n        if (index < 0) {\n            index = Math.max(0, index + n);\n        }\n        else {\n            index = Math.min(index, n);\n        }\n        for (var i = n; i > index; --i) {\n            array[i] = array[i - 1];\n        }\n        array[index] = value;\n    }\n    ArrayExt.insert = insert;\n    /**\n     * Remove and return a value at a specific index in an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param index - The index of the value to remove. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The value at the specified index, or `undefined` if the\n     *   index is out of range.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * An `index` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeAt(data, 2);   // 23\n     * ArrayExt.removeAt(data, -2);  // 12\n     * ArrayExt.removeAt(data, 10);  // undefined;\n     * ```\n     */\n    function removeAt(array, index) {\n        var n = array.length;\n        if (index < 0) {\n            index += n;\n        }\n        if (index < 0 || index >= n) {\n            return undefined;\n        }\n        var value = array[index];\n        for (var i = index + 1; i < n; ++i) {\n            array[i - 1] = array[i];\n        }\n        array.length = n - 1;\n        return value;\n    }\n    ArrayExt.removeAt = removeAt;\n    /**\n     * Remove the first occurrence of a value from an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param value - The value to remove from the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the removed value, or `-1` if the value\n     *   is not contained in the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeFirstOf(data, 12);        // 1\n     * ArrayExt.removeFirstOf(data, 17);        // -1\n     * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n     * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n     * ```\n     */\n    function removeFirstOf(array, value, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var index = firstIndexOf(array, value, start, stop);\n        if (index !== -1) {\n            removeAt(array, index);\n        }\n        return index;\n    }\n    ArrayExt.removeFirstOf = removeFirstOf;\n    /**\n     * Remove the last occurrence of a value from an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param value - The value to remove from the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the removed value, or `-1` if the value\n     *   is not contained in the array.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeLastOf(data, 12);        // 5\n     * ArrayExt.removeLastOf(data, 17);        // -1\n     * ArrayExt.removeLastOf(data, 39, 2);     // -1\n     * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n     * ```\n     */\n    function removeLastOf(array, value, start, stop) {\n        if (start === void 0) { start = -1; }\n        if (stop === void 0) { stop = 0; }\n        var index = lastIndexOf(array, value, start, stop);\n        if (index !== -1) {\n            removeAt(array, index);\n        }\n        return index;\n    }\n    ArrayExt.removeLastOf = removeLastOf;\n    /**\n     * Remove all occurrences of a value from an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param value - The value to remove from the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The number of elements removed from the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will conceptually wrap at the end of\n     * the array, however the array will be traversed front-to-back.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n     * ArrayExt.removeAllOf(data, 12);        // 2\n     * ArrayExt.removeAllOf(data, 17);        // 0\n     * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n     * ```\n     */\n    function removeAllOf(array, value, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var count = 0;\n        for (var i = 0; i < n; ++i) {\n            if (start <= stop && i >= start && i <= stop && array[i] === value) {\n                count++;\n            }\n            else if (stop < start &&\n                (i <= stop || i >= start) &&\n                array[i] === value) {\n                count++;\n            }\n            else if (count > 0) {\n                array[i - count] = array[i];\n            }\n        }\n        if (count > 0) {\n            array.length = n - count;\n        }\n        return count;\n    }\n    ArrayExt.removeAllOf = removeAllOf;\n    /**\n     * Remove the first occurrence of a value which matches a predicate.\n     *\n     * @param array - The array of interest.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The removed `{ index, value }`, which will be `-1` and\n     *   `undefined` if the value is not contained in the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n     * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n     * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n     * ```\n     */\n    function removeFirstWhere(array, fn, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var value;\n        var index = findFirstIndex(array, fn, start, stop);\n        if (index !== -1) {\n            value = removeAt(array, index);\n        }\n        return { index: index, value: value };\n    }\n    ArrayExt.removeFirstWhere = removeFirstWhere;\n    /**\n     * Remove the last occurrence of a value which matches a predicate.\n     *\n     * @param array - The array of interest.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The removed `{ index, value }`, which will be `-1` and\n     *   `undefined` if the value is not contained in the array.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n     * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n     * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n     * ```\n     */\n    function removeLastWhere(array, fn, start, stop) {\n        if (start === void 0) { start = -1; }\n        if (stop === void 0) { stop = 0; }\n        var value;\n        var index = findLastIndex(array, fn, start, stop);\n        if (index !== -1) {\n            value = removeAt(array, index);\n        }\n        return { index: index, value: value };\n    }\n    ArrayExt.removeLastWhere = removeLastWhere;\n    /**\n     * Remove all occurrences of values which match a predicate.\n     *\n     * @param array - The array of interest.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The number of elements removed from the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will conceptually wrap at the end of\n     * the array, however the array will be traversed front-to-back.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * function isNegative(value: number): boolean {\n     *   return value < 0;\n     * }\n     *\n     * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n     * ArrayExt.removeAllWhere(data, isEven);            // 4\n     * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n     * ```\n     */\n    function removeAllWhere(array, fn, start, stop) {\n        if (start === void 0) { start = 0; }\n        if (stop === void 0) { stop = -1; }\n        var n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        var count = 0;\n        for (var i = 0; i < n; ++i) {\n            if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n                count++;\n            }\n            else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n                count++;\n            }\n            else if (count > 0) {\n                array[i - count] = array[i];\n            }\n        }\n        if (count > 0) {\n            array.length = n - count;\n        }\n        return count;\n    }\n    ArrayExt.removeAllWhere = removeAllWhere;\n})(ArrayExt || (ArrayExt = {}));\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator for an iterable object.\n *\n * @param object - The iterable or array-like object of interest.\n *\n * @returns A new iterator for the given object.\n *\n * #### Notes\n * This function allows iteration algorithms to operate on user-defined\n * iterable types and builtin array-like objects in a uniform fashion.\n */\nfunction iter(object) {\n    var it;\n    if (typeof object.iter === 'function') {\n        it = object.iter();\n    }\n    else {\n        it = new ArrayIterator(object);\n    }\n    return it;\n}\n/**\n * Invoke a function for each value in an iterable.\n *\n * @param object - The iterable or array-like object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nfunction each(object, fn) {\n    var index = 0;\n    var it = iter(object);\n    var value;\n    while ((value = it.next()) !== undefined) {\n        if (fn(value, index++) === false) {\n            return;\n        }\n    }\n}\n/**\n * An iterator for an array-like object.\n *\n * #### Notes\n * This iterator can be used for any builtin JS array-like object.\n */\nvar ArrayIterator = /** @class */ (function () {\n    /**\n     * Construct a new array iterator.\n     *\n     * @param source - The array-like object of interest.\n     */\n    function ArrayIterator(source) {\n        this._index = 0;\n        this._source = source;\n    }\n    /**\n     * Get an iterator over the object's values.\n     *\n     * @returns An iterator which yields the object's values.\n     */\n    ArrayIterator.prototype.iter = function () {\n        return this;\n    };\n    /**\n     * Create an independent clone of the iterator.\n     *\n     * @returns A new independent clone of the iterator.\n     */\n    ArrayIterator.prototype.clone = function () {\n        var result = new ArrayIterator(this._source);\n        result._index = this._index;\n        return result;\n    };\n    /**\n     * Get the next value from the iterator.\n     *\n     * @returns The next value from the iterator, or `undefined`.\n     */\n    ArrayIterator.prototype.next = function () {\n        if (this._index >= this._source.length) {\n            return undefined;\n        }\n        return this._source[this._index++];\n    };\n    return ArrayIterator;\n}());\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable or array-like object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nfunction findIndex(object, fn) {\n    var index = 0;\n    var it = iter(object);\n    var value;\n    while ((value = it.next()) !== undefined) {\n        if (fn(value, index++)) {\n            return index - 1;\n        }\n    }\n    return -1;\n}\n/**\n * The namespace for the module implementation details.\n */\nvar Private$1;\n(function (Private) {\n    /**\n     * Compute the effective length of a range.\n     *\n     * @param start - The starting value for the range, inclusive.\n     *\n     * @param stop - The stopping value for the range, exclusive.\n     *\n     * @param step - The distance between each value.\n     *\n     * @returns The number of steps need to traverse the range.\n     */\n    function rangeLength(start, stop, step) {\n        if (step === 0) {\n            return Infinity;\n        }\n        if (start > stop && step > 0) {\n            return 0;\n        }\n        if (start < stop && step < 0) {\n            return 0;\n        }\n        return Math.ceil((stop - start) / step);\n    }\n    Private.rangeLength = rangeLength;\n})(Private$1 || (Private$1 = {}));\n\n// Copyright (c) Jupyter Development Team.\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable or array-like object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nfunction topologicSort(edges) {\n    // Setup the shared sorting state.\n    var sorted = [];\n    var visited = new Set();\n    var graph = new Map();\n    // Add the edges to the graph.\n    each(edges, addEdge);\n    // Visit each node in the graph.\n    graph.forEach(function (v, k) {\n        visit(k);\n    });\n    // Return the sorted results.\n    return sorted;\n    // Add an edge to the graph.\n    function addEdge(edge) {\n        var fromNode = edge[0], toNode = edge[1];\n        var children = graph.get(toNode);\n        if (children) {\n            children.push(fromNode);\n        }\n        else {\n            graph.set(toNode, [fromNode]);\n        }\n    }\n    // Recursively visit the node.\n    function visit(node) {\n        if (visited.has(node)) {\n            return;\n        }\n        visited.add(node);\n        var children = graph.get(node);\n        if (children) {\n            children.forEach(visit);\n        }\n        sorted.push(node);\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * The namespace for string-specific algorithms.\n */\nvar StringExt;\n(function (StringExt) {\n    /**\n     * Find the indices of characters in a source text.\n     *\n     * @param source - The source text which should be searched.\n     *\n     * @param query - The characters to locate in the source text.\n     *\n     * @param start - The index to start the search.\n     *\n     * @returns The matched indices, or `null` if there is no match.\n     *\n     * #### Complexity\n     * Linear on `sourceText`.\n     *\n     * #### Notes\n     * In order for there to be a match, all of the characters in `query`\n     * **must** appear in `source` in the order given by `query`.\n     *\n     * Characters are matched using strict `===` equality.\n     */\n    function findIndices(source, query, start) {\n        if (start === void 0) { start = 0; }\n        var indices = new Array(query.length);\n        for (var i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n            j = source.indexOf(query[i], j);\n            if (j === -1) {\n                return null;\n            }\n            indices[i] = j;\n        }\n        return indices;\n    }\n    StringExt.findIndices = findIndices;\n    /**\n     * A string matcher which uses a sum-of-squares algorithm.\n     *\n     * @param source - The source text which should be searched.\n     *\n     * @param query - The characters to locate in the source text.\n     *\n     * @param start - The index to start the search.\n     *\n     * @returns The match result, or `null` if there is no match.\n     *   A lower `score` represents a stronger match.\n     *\n     * #### Complexity\n     * Linear on `sourceText`.\n     *\n     * #### Notes\n     * This scoring algorithm uses a sum-of-squares approach to determine\n     * the score. In order for there to be a match, all of the characters\n     * in `query` **must** appear in `source` in order. The index of each\n     * matching character is squared and added to the score. This means\n     * that early and consecutive character matches are preferred, while\n     * late matches are heavily penalized.\n     */\n    function matchSumOfSquares(source, query, start) {\n        if (start === void 0) { start = 0; }\n        var indices = findIndices(source, query, start);\n        if (!indices) {\n            return null;\n        }\n        var score = 0;\n        for (var i = 0, n = indices.length; i < n; ++i) {\n            var j = indices[i] - start;\n            score += j * j;\n        }\n        return { score: score, indices: indices };\n    }\n    StringExt.matchSumOfSquares = matchSumOfSquares;\n    /**\n     * A string matcher which uses a sum-of-deltas algorithm.\n     *\n     * @param source - The source text which should be searched.\n     *\n     * @param query - The characters to locate in the source text.\n     *\n     * @param start - The index to start the search.\n     *\n     * @returns The match result, or `null` if there is no match.\n     *   A lower `score` represents a stronger match.\n     *\n     * #### Complexity\n     * Linear on `sourceText`.\n     *\n     * #### Notes\n     * This scoring algorithm uses a sum-of-deltas approach to determine\n     * the score. In order for there to be a match, all of the characters\n     * in `query` **must** appear in `source` in order. The delta between\n     * the indices are summed to create the score. This means that groups\n     * of matched characters are preferred, while fragmented matches are\n     * penalized.\n     */\n    function matchSumOfDeltas(source, query, start) {\n        if (start === void 0) { start = 0; }\n        var indices = findIndices(source, query, start);\n        if (!indices) {\n            return null;\n        }\n        var score = 0;\n        var last = start - 1;\n        for (var i = 0, n = indices.length; i < n; ++i) {\n            var j = indices[i];\n            score += j - last - 1;\n            last = j;\n        }\n        return { score: score, indices: indices };\n    }\n    StringExt.matchSumOfDeltas = matchSumOfDeltas;\n    /**\n     * Highlight the matched characters of a source text.\n     *\n     * @param source - The text which should be highlighted.\n     *\n     * @param indices - The indices of the matched characters. They must\n     *   appear in increasing order and must be in bounds of the source.\n     *\n     * @param fn - The function to apply to the matched chunks.\n     *\n     * @returns An array of unmatched and highlighted chunks.\n     */\n    function highlight(source, indices, fn) {\n        // Set up the result array.\n        var result = [];\n        // Set up the counter variables.\n        var k = 0;\n        var last = 0;\n        var n = indices.length;\n        // Iterator over each index.\n        while (k < n) {\n            // Set up the chunk indices.\n            var i = indices[k];\n            var j = indices[k];\n            // Advance the right chunk index until it's non-contiguous.\n            while (++k < n && indices[k] === j + 1) {\n                j++;\n            }\n            // Extract the unmatched text.\n            if (last < i) {\n                result.push(source.slice(last, i));\n            }\n            // Extract and highlight the matched text.\n            if (i < j + 1) {\n                result.push(fn(source.slice(i, j + 1)));\n            }\n            // Update the last visited index.\n            last = j + 1;\n        }\n        // Extract any remaining unmatched text.\n        if (last < source.length) {\n            result.push(source.slice(last));\n        }\n        // Return the highlighted result.\n        return result;\n    }\n    StringExt.highlight = highlight;\n    /**\n     * A 3-way string comparison function.\n     *\n     * @param a - The first string of interest.\n     *\n     * @param b - The second string of interest.\n     *\n     * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n     */\n    function cmp(a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n    StringExt.cmp = cmp;\n})(StringExt || (StringExt = {}));\n\n/**\n * A class for creating pluggable applications.\n *\n * @typeparam T - The type of the application shell.\n *\n * #### Notes\n * The `Application` class is useful when creating large, complex\n * UI applications with the ability to be safely extended by third\n * party code via plugins.\n */\nvar Application = /** @class */ (function () {\n    /**\n     * Construct a new application.\n     *\n     * @param options - The options for creating the application.\n     */\n    function Application(options) {\n        this._started = false;\n        this._pluginMap = Private.createPluginMap();\n        this._serviceMap = Private.createServiceMap();\n        this._delegate = new PromiseDelegate();\n        // Initialize the application state.\n        this.commands = new CommandRegistry();\n        this.contextMenu = new ContextMenu({\n            commands: this.commands,\n            renderer: options.contextMenuRenderer\n        });\n        this.shell = options.shell;\n    }\n    Object.defineProperty(Application.prototype, \"started\", {\n        /**\n         * A promise which resolves after the application has started.\n         *\n         * #### Notes\n         * This promise will resolve after the `start()` method is called,\n         * when all the bootstrapping and shell mounting work is complete.\n         */\n        get: function () {\n            return this._delegate.promise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get a plugin description.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @returns The plugin description.\n     */\n    Application.prototype.getPluginDescription = function (id) {\n        var plugin = this._pluginMap[id];\n        return plugin ? plugin.description || '' : '';\n    };\n    /**\n     * Test whether a plugin is registered with the application.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @returns `true` if the plugin is registered, `false` otherwise.\n     */\n    Application.prototype.hasPlugin = function (id) {\n        return id in this._pluginMap;\n    };\n    /**\n     * Test whether a plugin is activated with the application.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @returns `true` if the plugin is activated, `false` otherwise.\n     */\n    Application.prototype.isPluginActivated = function (id) {\n        var plugin = this._pluginMap[id];\n        return plugin ? plugin.activated : false;\n    };\n    /**\n     * List the IDs of the plugins registered with the application.\n     *\n     * @returns A new array of the registered plugin IDs.\n     */\n    Application.prototype.listPlugins = function () {\n        return Object.keys(this._pluginMap);\n    };\n    /**\n     * Register a plugin with the application.\n     *\n     * @param plugin - The plugin to register.\n     *\n     * #### Notes\n     * An error will be thrown if a plugin with the same ID is already\n     * registered, or if the plugin has a circular dependency.\n     *\n     * If the plugin provides a service which has already been provided\n     * by another plugin, the new service will override the old service.\n     */\n    Application.prototype.registerPlugin = function (plugin) {\n        // Throw an error if the plugin id is already registered.\n        if (plugin.id in this._pluginMap) {\n            throw new Error(\"Plugin '\" + plugin.id + \"' is already registered.\");\n        }\n        // Create the normalized plugin data.\n        var data = Private.createPluginData(plugin);\n        // Ensure the plugin does not cause a cyclic dependency.\n        Private.ensureNoCycle(data, this._pluginMap, this._serviceMap);\n        // Add the service token to the service map.\n        if (data.provides) {\n            this._serviceMap.set(data.provides, data.id);\n        }\n        // Add the plugin to the plugin map.\n        this._pluginMap[data.id] = data;\n    };\n    /**\n     * Register multiple plugins with the application.\n     *\n     * @param plugins - The plugins to register.\n     *\n     * #### Notes\n     * This calls `registerPlugin()` for each of the given plugins.\n     */\n    Application.prototype.registerPlugins = function (plugins) {\n        for (var _i = 0, plugins_1 = plugins; _i < plugins_1.length; _i++) {\n            var plugin = plugins_1[_i];\n            this.registerPlugin(plugin);\n        }\n    };\n    /**\n     * Deregister a plugin with the application.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @param force - Whether to deregister the plugin even if it is active.\n     */\n    Application.prototype.deregisterPlugin = function (id, force) {\n        var plugin = this._pluginMap[id];\n        if (!plugin) {\n            return;\n        }\n        if (plugin.activated && !force) {\n            throw new Error(\"Plugin '\" + id + \"' is still active.\");\n        }\n        delete this._pluginMap[id];\n    };\n    /**\n     * Activate the plugin with the given ID.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @returns A promise which resolves when the plugin is activated\n     *   or rejects with an error if it cannot be activated.\n     */\n    Application.prototype.activatePlugin = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var plugin, required, optional;\n            var _this = this;\n            return __generator(this, function (_a) {\n                plugin = this._pluginMap[id];\n                if (!plugin) {\n                    return [2 /*return*/, Promise.reject(new Error(\"Plugin '\" + id + \"' is not registered.\"))];\n                }\n                // Resolve immediately if the plugin is already activated.\n                if (plugin.activated) {\n                    return [2 /*return*/];\n                }\n                // Return the pending resolver promise if it exists.\n                if (plugin.promise) {\n                    return [2 /*return*/, plugin.promise];\n                }\n                required = plugin.requires.map(function (t) { return _this.resolveRequiredService(t); });\n                optional = plugin.optional.map(function (t) { return _this.resolveOptionalService(t); });\n                // Setup the resolver promise for the plugin.\n                plugin.promise = Promise.all(__spreadArrays(required, optional))\n                    .then(function (services) { return plugin.activate.apply(undefined, __spreadArrays([_this], services)); })\n                    .then(function (service) {\n                    plugin.service = service;\n                    plugin.activated = true;\n                    plugin.promise = null;\n                })\n                    .catch(function (error) {\n                    plugin.promise = null;\n                    throw error;\n                });\n                // Return the pending resolver promise.\n                return [2 /*return*/, plugin.promise];\n            });\n        });\n    };\n    /**\n     * Deactivate the plugin and its downstream dependents if and only if the\n     * plugin and its dependents all support `deactivate`.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @returns A list of IDs of downstream plugins deactivated with this one.\n     */\n    Application.prototype.deactivatePlugin = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var plugin, manifest, downstream, _i, downstream_1, plugin_1, _a, downstream_2, plugin_2, services;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        plugin = this._pluginMap[id];\n                        if (!plugin) {\n                            throw new ReferenceError(\"Plugin '\" + id + \"' is not registered.\");\n                        }\n                        // Bail early if the plugin is not activated.\n                        if (!plugin.activated) {\n                            return [2 /*return*/, []];\n                        }\n                        // Check that this plugin can deactivate.\n                        if (!plugin.deactivate) {\n                            throw new TypeError(\"Plugin '\" + id + \"'#deactivate() method missing\");\n                        }\n                        manifest = Private.findDependents(id, this._pluginMap, this._serviceMap);\n                        downstream = manifest.map(function (id) { return _this._pluginMap[id]; });\n                        // Check that all downstream plugins can deactivate.\n                        for (_i = 0, downstream_1 = downstream; _i < downstream_1.length; _i++) {\n                            plugin_1 = downstream_1[_i];\n                            if (!plugin_1.deactivate) {\n                                throw new TypeError(\"Plugin \" + plugin_1.id + \"#deactivate() method missing (depends on \" + id + \")\");\n                            }\n                        }\n                        _a = 0, downstream_2 = downstream;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_a < downstream_2.length)) return [3 /*break*/, 4];\n                        plugin_2 = downstream_2[_a];\n                        services = __spreadArrays(plugin_2.requires, plugin_2.optional).map(function (service) {\n                            var id = _this._serviceMap.get(service);\n                            return id ? _this._pluginMap[id].service : null;\n                        });\n                        // Await deactivation so the next plugins only receive active services.\n                        return [4 /*yield*/, plugin_2.deactivate.apply(plugin_2, __spreadArrays([this], services))];\n                    case 2:\n                        // Await deactivation so the next plugins only receive active services.\n                        _b.sent();\n                        plugin_2.service = null;\n                        plugin_2.activated = false;\n                        _b.label = 3;\n                    case 3:\n                        _a++;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        // Remove plugin ID and return manifest of deactivated plugins.\n                        manifest.pop();\n                        return [2 /*return*/, manifest];\n                }\n            });\n        });\n    };\n    /**\n     * Resolve a required service of a given type.\n     *\n     * @param token - The token for the service type of interest.\n     *\n     * @returns A promise which resolves to an instance of the requested\n     *   service, or rejects with an error if it cannot be resolved.\n     *\n     * #### Notes\n     * Services are singletons. The same instance will be returned each\n     * time a given service token is resolved.\n     *\n     * If the plugin which provides the service has not been activated,\n     * resolving the service will automatically activate the plugin.\n     *\n     * User code will not typically call this method directly. Instead,\n     * the required services for the user's plugins will be resolved\n     * automatically when the plugin is activated.\n     */\n    Application.prototype.resolveRequiredService = function (token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var id, plugin;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        id = this._serviceMap.get(token);\n                        if (!id) {\n                            return [2 /*return*/, Promise.reject(new Error(\"No provider for: \" + token.name + \".\"))];\n                        }\n                        plugin = this._pluginMap[id];\n                        if (!!plugin.activated) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.activatePlugin(id)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, plugin.service];\n                }\n            });\n        });\n    };\n    /**\n     * Resolve an optional service of a given type.\n     *\n     * @param token - The token for the service type of interest.\n     *\n     * @returns A promise which resolves to an instance of the requested\n     *   service, or `null` if it cannot be resolved.\n     *\n     * #### Notes\n     * Services are singletons. The same instance will be returned each\n     * time a given service token is resolved.\n     *\n     * If the plugin which provides the service has not been activated,\n     * resolving the service will automatically activate the plugin.\n     *\n     * User code will not typically call this method directly. Instead,\n     * the optional services for the user's plugins will be resolved\n     * automatically when the plugin is activated.\n     */\n    Application.prototype.resolveOptionalService = function (token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var id, plugin, reason_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        id = this._serviceMap.get(token);\n                        if (!id) {\n                            return [2 /*return*/, null];\n                        }\n                        plugin = this._pluginMap[id];\n                        if (!!plugin.activated) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.activatePlugin(id)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        reason_1 = _a.sent();\n                        console.error(reason_1);\n                        return [2 /*return*/, null];\n                    case 4: return [2 /*return*/, plugin.service];\n                }\n            });\n        });\n    };\n    /**\n     * Start the application.\n     *\n     * @param options - The options for starting the application.\n     *\n     * @returns A promise which resolves when all bootstrapping work\n     *   is complete and the shell is mounted to the DOM.\n     *\n     * #### Notes\n     * This should be called once by the application creator after all\n     * initial plugins have been registered.\n     *\n     * If a plugin fails to the load, the error will be logged and the\n     * other valid plugins will continue to be loaded.\n     *\n     * Bootstrapping the application consists of the following steps:\n     * 1. Activate the startup plugins\n     * 2. Wait for those plugins to activate\n     * 3. Attach the shell widget to the DOM\n     * 4. Add the application event listeners\n     */\n    Application.prototype.start = function (options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // Return immediately if the application is already started.\n        if (this._started) {\n            return this._delegate.promise;\n        }\n        // Mark the application as started;\n        this._started = true;\n        // Parse the host ID for attaching the shell.\n        var hostID = options.hostID || '';\n        // Collect the ids of the startup plugins.\n        var startups = Private.collectStartupPlugins(this._pluginMap, options);\n        // Generate the activation promises.\n        var promises = startups.map(function (id) {\n            return _this.activatePlugin(id).catch(function (error) {\n                console.error(\"Plugin '\" + id + \"' failed to activate.\");\n                console.error(error);\n            });\n        });\n        // Wait for the plugins to activate, then finalize startup.\n        Promise.all(promises).then(function () {\n            _this.attachShell(hostID);\n            _this.addEventListeners();\n            _this._delegate.resolve(undefined);\n        });\n        // Return the pending delegate promise.\n        return this._delegate.promise;\n    };\n    /**\n     * Handle the DOM events for the application.\n     *\n     * @param event - The DOM event sent to the application.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events registered for the application. It\n     * should not be called directly by user code.\n     */\n    Application.prototype.handleEvent = function (event) {\n        switch (event.type) {\n            case 'resize':\n                this.evtResize(event);\n                break;\n            case 'keydown':\n                this.evtKeydown(event);\n                break;\n            case 'contextmenu':\n                this.evtContextMenu(event);\n                break;\n        }\n    };\n    /**\n     * Attach the application shell to the DOM.\n     *\n     * @param id - The ID of the host node for the shell, or `''`.\n     *\n     * #### Notes\n     * If the ID is not provided, the document body will be the host.\n     *\n     * A subclass may reimplement this method as needed.\n     */\n    Application.prototype.attachShell = function (id) {\n        Widget.attach(this.shell, (id && document.getElementById(id)) || document.body);\n    };\n    /**\n     * Add the application event listeners.\n     *\n     * #### Notes\n     * The default implementation of this method adds listeners for\n     * `'keydown'` and `'resize'` events.\n     *\n     * A subclass may reimplement this method as needed.\n     */\n    Application.prototype.addEventListeners = function () {\n        document.addEventListener('contextmenu', this);\n        document.addEventListener('keydown', this, true);\n        window.addEventListener('resize', this);\n    };\n    /**\n     * A method invoked on a document `'keydown'` event.\n     *\n     * #### Notes\n     * The default implementation of this method invokes the key down\n     * processing method of the application command registry.\n     *\n     * A subclass may reimplement this method as needed.\n     */\n    Application.prototype.evtKeydown = function (event) {\n        this.commands.processKeydownEvent(event);\n    };\n    /**\n     * A method invoked on a document `'contextmenu'` event.\n     *\n     * #### Notes\n     * The default implementation of this method opens the application\n     * `contextMenu` at the current mouse position.\n     *\n     * If the application context menu has no matching content *or* if\n     * the shift key is pressed, the default browser context menu will\n     * be opened instead.\n     *\n     * A subclass may reimplement this method as needed.\n     */\n    Application.prototype.evtContextMenu = function (event) {\n        if (event.shiftKey) {\n            return;\n        }\n        if (this.contextMenu.open(event)) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    /**\n     * A method invoked on a window `'resize'` event.\n     *\n     * #### Notes\n     * The default implementation of this method updates the shell.\n     *\n     * A subclass may reimplement this method as needed.\n     */\n    Application.prototype.evtResize = function (event) {\n        this.shell.update();\n    };\n    return Application;\n}());\n/**\n * The namespace for the module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Create a new plugin map.\n     */\n    function createPluginMap() {\n        return Object.create(null);\n    }\n    Private.createPluginMap = createPluginMap;\n    /**\n     * Create a new service map.\n     */\n    function createServiceMap() {\n        return new Map();\n    }\n    Private.createServiceMap = createServiceMap;\n    /**\n     * Create a normalized plugin data object for the given plugin.\n     */\n    function createPluginData(plugin) {\n        return {\n            id: plugin.id,\n            description: plugin.description || '',\n            service: null,\n            promise: null,\n            activated: false,\n            activate: plugin.activate,\n            deactivate: plugin.deactivate || null,\n            provides: plugin.provides || null,\n            autoStart: plugin.autoStart || false,\n            requires: plugin.requires ? plugin.requires.slice() : [],\n            optional: plugin.optional ? plugin.optional.slice() : []\n        };\n    }\n    Private.createPluginData = createPluginData;\n    /**\n     * Ensure no cycle is present in the plugin resolution graph.\n     *\n     * If a cycle is detected, an error will be thrown.\n     */\n    function ensureNoCycle(plugin, plugins, services) {\n        var dependencies = __spreadArrays(plugin.requires, plugin.optional);\n        var visit = function (token) {\n            if (token === plugin.provides) {\n                return true;\n            }\n            var id = services.get(token);\n            if (!id) {\n                return false;\n            }\n            var visited = plugins[id];\n            var dependencies = __spreadArrays(visited.requires, visited.optional);\n            if (dependencies.length === 0) {\n                return false;\n            }\n            trace.push(id);\n            if (dependencies.some(visit)) {\n                return true;\n            }\n            trace.pop();\n            return false;\n        };\n        // Bail early if there cannot be a cycle.\n        if (!plugin.provides || dependencies.length === 0) {\n            return;\n        }\n        // Setup a stack to trace service resolution.\n        var trace = [plugin.id];\n        // Throw an exception if a cycle is present.\n        if (dependencies.some(visit)) {\n            throw new Error(\"Cycle detected: \" + trace.join(' -> ') + \".\");\n        }\n    }\n    Private.ensureNoCycle = ensureNoCycle;\n    /**\n     * Find dependents in deactivation order.\n     *\n     * @param id - The ID of the plugin of interest.\n     *\n     * @param plugins - The map containing all plugins.\n     *\n     * @param services - The map containing all services.\n     *\n     * @returns A list of dependent plugin IDs in order of deactivation\n     *\n     * #### Notes\n     * The final item of the returned list is always the plugin of interest.\n     */\n    function findDependents(id, plugins, services) {\n        var edges = new Array();\n        var add = function (id) {\n            var plugin = plugins[id];\n            // FIXME In the case of missing optional dependencies, we may consider\n            // deactivating and reactivating the plugin without the missing service.\n            var dependencies = __spreadArrays(plugin.requires, plugin.optional);\n            edges.push.apply(edges, dependencies.reduce(function (acc, dep) {\n                var service = services.get(dep);\n                if (service) {\n                    // An edge is oriented from dependent to provider.\n                    acc.push([id, service]);\n                }\n                return acc;\n            }, []));\n        };\n        for (var id_1 in plugins) {\n            add(id_1);\n        }\n        // Filter edges\n        // - Get all packages that dependent on the package to be deactivated\n        var newEdges = edges.filter(function (edge) { return edge[1] === id; });\n        var oldSize = 0;\n        while (newEdges.length > oldSize) {\n            var previousSize = newEdges.length;\n            // Get all packages that dependent on packages that will be deactivated\n            var packagesOfInterest = newEdges\n                .map(function (edge) { return edge[0]; })\n                .reduce(function (agg, value) {\n                if (agg.indexOf(value) == -1) {\n                    agg.push(value);\n                }\n                return agg;\n            }, []);\n            var _loop_1 = function (poi) {\n                edges\n                    .filter(function (edge) { return edge[1] === poi; })\n                    .forEach(function (edge) {\n                    // We check it is not already included to deal with circular dependencies\n                    if (newEdges.indexOf(edge) == -1) {\n                        newEdges.push(edge);\n                    }\n                });\n            };\n            for (var _i = 0, packagesOfInterest_1 = packagesOfInterest; _i < packagesOfInterest_1.length; _i++) {\n                var poi = packagesOfInterest_1[_i];\n                _loop_1(poi);\n            }\n            oldSize = previousSize;\n        }\n        var sorted = topologicSort(newEdges);\n        var index = findIndex(sorted, function (candidate) { return candidate === id; });\n        if (index === -1) {\n            return [id];\n        }\n        return sorted.slice(0, index + 1);\n    }\n    Private.findDependents = findDependents;\n    /**\n     * Collect the IDs of the plugins to activate on startup.\n     */\n    function collectStartupPlugins(pluginMap, options) {\n        // Create a map to hold the plugin IDs.\n        var collection = new Map();\n        // Collect the auto-start plugins.\n        for (var id in pluginMap) {\n            if (pluginMap[id].autoStart) {\n                collection.set(id, true);\n            }\n        }\n        // Add the startup plugins.\n        if (options.startPlugins) {\n            for (var _i = 0, _a = options.startPlugins; _i < _a.length; _i++) {\n                var id = _a[_i];\n                collection.set(id, true);\n            }\n        }\n        // Remove the ignored plugins.\n        if (options.ignorePlugins) {\n            for (var _b = 0, _c = options.ignorePlugins; _b < _c.length; _b++) {\n                var id = _c[_b];\n                collection.delete(id);\n            }\n        }\n        // Return the collected startup plugins.\n        return Array.from(collection.keys());\n    }\n    Private.collectStartupPlugins = collectStartupPlugins;\n})(Private || (Private = {}));\n\nexport { Application };\n//# sourceMappingURL=index.es6.js.map\n"],"names":["ArrayExt","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","r","Array","k","a","j","jl","iter","object","ArrayIterator","firstIndexOf","array","start","stop","span","Math","max","min","lastIndexOf","findFirstIndex","fn","findLastIndex","d","reverse","b","removeAt","index","findFirstValue","undefined","findLastValue","lowerBound","begin","half","middle","upperBound","shallowEqual","slice","options","Error","floor","move","fromIndex","toIndex","rotate","delta","pivot","fill","insert","removeFirstOf","removeLastOf","removeAllOf","count","removeFirstWhere","removeLastWhere","removeAllWhere","Private$1","StringExt","source","_index","_source","prototype","clone","Private","rangeLength","Infinity","ceil","findIndices","query","indices","indexOf","matchSumOfSquares","score","matchSumOfDeltas","last","highlight","cmp","Application","_started","_pluginMap","createPluginMap","_serviceMap","createServiceMap","_delegate","PromiseDelegate","commands","CommandRegistry","contextMenu","ContextMenu","renderer","contextMenuRenderer","shell","Object","defineProperty","get","promise","enumerable","configurable","getPluginDescription","id","plugin","description","hasPlugin","isPluginActivated","activated","listPlugins","keys","registerPlugin","data","createPluginData","ensureNoCycle","provides","set","registerPlugins","plugins","_i","plugins_1","deregisterPlugin","force","activatePlugin","required","optional","_this","_a","requires","map","resolveRequiredService","resolveOptionalService","all","services","activate","service","catch","error","deactivatePlugin","manifest","downstream","downstream_1","plugin_1","downstream_2","plugin_2","_b","ReferenceError","deactivate","findDependents","token","name","reason_1","console","hostID","promises","collectStartupPlugins","attachShell","addEventListeners","handleEvent","event","type","evtResize","evtKeydown","evtContextMenu","Widget","document","getElementById","addEventListener","window","processKeydownEvent","shiftKey","open","preventDefault","stopPropagation","update","create","Map","autoStart","dependencies","visit","visited","trace","some","join","edges","add","reduce","acc","dep","id_1","newEdges","filter","edge","oldSize","previousSize","_loop_1","poi","forEach","packagesOfInterest_1","agg","sorted","Set","graph","it","fromNode","toNode","children","each","node","has","topologicSort","findIndex","pluginMap","collection","startPlugins","ignorePlugins","_c","delete","from"],"sourceRoot":""}