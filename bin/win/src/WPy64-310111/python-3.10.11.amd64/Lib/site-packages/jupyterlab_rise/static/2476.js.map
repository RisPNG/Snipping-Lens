{"version":3,"file":"2476.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/style/layout.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/group.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/style/variables.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/style/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/style/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/hover.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/progressCircle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/defaults/kernelStatus.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/style/lineForm.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/defaults/lineCol.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/defaults/runningSessions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/tokens.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nexport const centeredFlex = {\n    display: 'flex',\n    alignItems: 'center'\n};\nexport const leftToRight = {\n    flexDirection: 'row'\n};\nexport const rightToLeft = {\n    flexDirection: 'row-reverse'\n};\nexport const equiDistant = {\n    justifyContent: 'space-between'\n};\n//# sourceMappingURL=layout.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { classes, style } from 'typestyle/lib';\nimport { centeredFlex, leftToRight } from '../style/layout';\nconst groupItemLayout = style(centeredFlex, leftToRight);\n/**\n * A tsx component for a set of items logically grouped together.\n */\nexport function GroupItem(props) {\n    const { spacing, children, className } = props, rest = __rest(props, [\"spacing\", \"children\", \"className\"]);\n    const numChildren = React.Children.count(children);\n    return (React.createElement(\"div\", Object.assign({ className: classes(groupItemLayout, className) }, rest), React.Children.map(children, (child, i) => {\n        if (i === 0) {\n            return React.createElement(\"div\", { style: { marginRight: `${spacing}px` } }, child);\n        }\n        else if (i === numChildren - 1) {\n            return React.createElement(\"div\", { style: { marginLeft: `${spacing}px` } }, child);\n        }\n        else {\n            return React.createElement(\"div\", { style: { margin: `0px ${spacing}px` } }, child);\n        }\n    })));\n}\n//# sourceMappingURL=group.js.map","export default {\n    hoverColor: 'var(--jp-layout-color3)',\n    clickColor: 'var(--jp-brand-color1)',\n    backgroundColor: 'var(--jp-layout-color2)',\n    height: 'var(--jp-statusbar-height)',\n    fontSize: 'var(--jp-ui-font-size1)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    textColor: 'var(--jp-ui-font-color1)',\n    textClickColor: 'white',\n    itemMargin: '2px',\n    itemPadding: '6px',\n    statusBarPadding: '10px',\n    interItemHalfSpacing: '2px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n};\n//# sourceMappingURL=variables.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nimport vars from './variables';\nexport const baseText = {\n    fontSize: vars.fontSize,\n    fontFamily: vars.fontFamily\n};\nexport const textItem = style(baseText, {\n    lineHeight: '24px',\n    color: vars.textColor\n});\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nimport { centeredFlex, leftToRight, rightToLeft } from './layout';\nimport { textItem } from './text';\nimport vars from './variables';\nconst itemPadding = {\n    paddingLeft: vars.itemPadding,\n    paddingRight: vars.itemPadding\n};\nconst interactiveHover = {\n    $nest: {\n        '&:hover': {\n            backgroundColor: vars.hoverColor\n        }\n    }\n};\nconst clicked = {\n    backgroundColor: vars.clickColor,\n    $nest: {\n        ['.' + textItem]: {\n            color: vars.textClickColor\n        }\n    }\n};\nexport const statusBar = style({\n    background: vars.backgroundColor,\n    minHeight: vars.height,\n    justifyContent: 'space-between',\n    paddingLeft: vars.statusBarPadding,\n    paddingRight: vars.statusBarPadding\n}, centeredFlex);\nexport const side = style(centeredFlex);\nexport const leftSide = style(leftToRight);\nexport const rightSide = style(rightToLeft);\nexport const item = style({\n    maxHeight: vars.height,\n    marginLeft: vars.itemMargin,\n    marginRight: vars.itemMargin,\n    height: vars.height,\n    whiteSpace: vars.whiteSpace,\n    textOverflow: vars.textOverflow,\n    color: vars.textColor\n}, itemPadding);\nexport const clickedItem = style(clicked);\nexport const interactiveItem = style(interactiveHover);\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { HoverBox } from '@jupyterlab/apputils';\nimport { PanelLayout, Widget } from '@lumino/widgets';\nimport { style } from 'typestyle/lib';\nimport { clickedItem, interactiveItem } from '../style/statusbar';\nconst hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\n/**\n * Create and show a popup component.\n *\n * @param options - options for the popup\n *\n * @returns the popup that was created.\n */\nexport function showPopup(options) {\n    const dialog = new Popup(options);\n    if (!options.startHidden) {\n        dialog.launch();\n    }\n    return dialog;\n}\n/**\n * A class for a Popup widget.\n */\nexport class Popup extends Widget {\n    /**\n     * Construct a new Popup.\n     */\n    constructor(options) {\n        super();\n        this._body = options.body;\n        this._body.addClass(hoverItem);\n        this._anchor = options.anchor;\n        this._align = options.align;\n        if (options.hasDynamicSize) {\n            this._observer = new ResizeObserver(() => {\n                this.update();\n            });\n        }\n        const layout = (this.layout = new PanelLayout());\n        layout.addWidget(options.body);\n        this._body.node.addEventListener('resize', () => {\n            this.update();\n        });\n    }\n    /**\n     * Attach the popup widget to the page.\n     */\n    launch() {\n        this._setGeometry();\n        Widget.attach(this, document.body);\n        this.update();\n        this._anchor.addClass(clickedItem);\n        this._anchor.removeClass(interactiveItem);\n    }\n    /**\n     * Handle `'update'` messages for the widget.\n     */\n    onUpdateRequest(msg) {\n        this._setGeometry();\n        super.onUpdateRequest(msg);\n    }\n    /**\n     * Handle `'after-attach'` messages for the widget.\n     */\n    onAfterAttach(msg) {\n        var _a;\n        document.addEventListener('click', this, false);\n        this.node.addEventListener('keydown', this, false);\n        window.addEventListener('resize', this, false);\n        (_a = this._observer) === null || _a === void 0 ? void 0 : _a.observe(this._body.node);\n    }\n    /**\n     * Handle `'before-detach'` messages for the widget.\n     */\n    onBeforeDetach(msg) {\n        var _a;\n        (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n        document.removeEventListener('click', this, false);\n        this.node.removeEventListener('keydown', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'resize'` messages for the widget.\n     */\n    onResize() {\n        this.update();\n    }\n    /**\n     * Dispose of the widget.\n     */\n    dispose() {\n        var _a;\n        (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n        super.dispose();\n        this._anchor.removeClass(clickedItem);\n        this._anchor.addClass(interactiveItem);\n    }\n    /**\n     * Handle DOM events for the widget.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'keydown':\n                this._evtKeydown(event);\n                break;\n            case 'click':\n                this._evtClick(event);\n                break;\n            case 'resize':\n                this.onResize();\n                break;\n            default:\n                break;\n        }\n    }\n    _evtClick(event) {\n        if (!!event.target &&\n            !(this._body.node.contains(event.target) ||\n                this._anchor.node.contains(event.target))) {\n            this.dispose();\n        }\n    }\n    _evtKeydown(event) {\n        // Check for escape key\n        switch (event.keyCode) {\n            case 27: // Escape.\n                event.stopPropagation();\n                event.preventDefault();\n                this.dispose();\n                break;\n            default:\n                break;\n        }\n    }\n    _setGeometry() {\n        let aligned = 0;\n        const anchorRect = this._anchor.node.getBoundingClientRect();\n        const bodyRect = this._body.node.getBoundingClientRect();\n        if (this._align === 'right') {\n            aligned = -(bodyRect.width - anchorRect.width);\n        }\n        const style = window.getComputedStyle(this._body.node);\n        HoverBox.setGeometry({\n            anchor: anchorRect,\n            host: document.body,\n            maxHeight: 500,\n            minHeight: 20,\n            node: this._body.node,\n            offset: {\n                horizontal: aligned\n            },\n            privilege: 'forceAbove',\n            style\n        });\n    }\n}\n//# sourceMappingURL=hover.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\n/**\n * A functional tsx component for a progress bar.\n */\nexport function ProgressBar(props) {\n    const { width, percentage } = props, rest = __rest(props, [\"width\", \"percentage\"]);\n    return (React.createElement(\"div\", { className: 'jp-Statusbar-ProgressBar-progress-bar', role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-valuenow\": percentage },\n        React.createElement(Filler, Object.assign({}, Object.assign({ percentage }, rest), { contentWidth: width }))));\n}\n/**\n * A functional tsx component for a partially filled div.\n */\nfunction Filler(props) {\n    return (React.createElement(\"div\", { style: {\n            width: `${props.percentage}%`\n        } },\n        React.createElement(\"p\", null, props.content)));\n}\n//# sourceMappingURL=progressBar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { classes } from 'typestyle/lib';\nimport { textItem } from '../style/text';\n/**\n * A functional tsx component for a text item.\n */\nexport function TextItem(props) {\n    const { title, source, className } = props, rest = __rest(props, [\"title\", \"source\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: classes(textItem, className), title: title }, rest), source));\n}\n//# sourceMappingURL=text.js.map","import React from 'react';\nexport function ProgressCircle(props) {\n    const radius = 104;\n    const d = (progress) => {\n        const angle = Math.max(progress * 3.6, 0.1);\n        const rad = (angle * Math.PI) / 180, x = Math.sin(rad) * radius, y = Math.cos(rad) * -radius, mid = angle < 180 ? 1 : 0, shape = `M 0 0 v -${radius} A ${radius} ${radius} 1 ` +\n            mid +\n            ' 0 ' +\n            x.toFixed(4) +\n            ' ' +\n            y.toFixed(4) +\n            ' z';\n        return shape;\n    };\n    return (React.createElement(\"div\", { className: 'jp-Statusbar-ProgressCircle', role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-valuenow\": props.progress },\n        React.createElement(\"svg\", { viewBox: \"0 0 250 250\" },\n            React.createElement(\"circle\", { cx: \"125\", cy: \"125\", r: `${radius}`, stroke: \"var(--jp-inverse-layout-color3)\", strokeWidth: \"20\", fill: \"none\" }),\n            React.createElement(\"path\", { transform: \"translate(125,125) scale(.9)\", d: d(props.progress), fill: 'var(--jp-inverse-layout-color3)' }))));\n}\n//# sourceMappingURL=progressCircle.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { translateKernelStatuses, VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { JSONExt } from '@lumino/coreutils';\nimport React from 'react';\nimport { interactiveItem, TextItem } from '..';\n/**\n * A pure functional component for rendering kernel status.\n */\nfunction KernelStatusComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    let statusText = '';\n    if (props.status) {\n        statusText = ` | ${props.status}`;\n    }\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: `${props.kernelName}${statusText}`, title: trans.__('Change kernel for %1', props.activityName) }));\n}\n/**\n * A VDomRenderer widget for displaying the status of a kernel.\n */\nexport class KernelStatus extends VDomRenderer {\n    /**\n     * Construct the kernel status widget.\n     */\n    constructor(opts, translator) {\n        super(new KernelStatus.Model(translator));\n        this.translator = translator || nullTranslator;\n        this._handleClick = opts.onClick;\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the kernel status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(KernelStatusComponent, { status: this.model.status, kernelName: this.model.kernelName, activityName: this.model.activityName, handleClick: this._handleClick, translator: this.translator }));\n        }\n    }\n}\n/**\n * A namespace for KernelStatus statics.\n */\n(function (KernelStatus) {\n    /**\n     * A VDomModel for the kernel status indicator.\n     */\n    class Model extends VDomModel {\n        constructor(translator) {\n            super();\n            this._activityName = 'activity'; // FIXME-TRANS:?\n            this._kernelStatus = '';\n            this._sessionContext = null;\n            translator = translator || nullTranslator;\n            this._trans = translator.load('jupyterlab');\n            this._kernelName = this._trans.__('No Kernel!');\n            this._statusNames = translateKernelStatuses(translator);\n        }\n        /**\n         * The name of the kernel.\n         */\n        get kernelName() {\n            return this._kernelName;\n        }\n        /**\n         * The current status of the kernel.\n         */\n        get status() {\n            return this._kernelStatus\n                ? this._statusNames[this._kernelStatus]\n                : undefined;\n        }\n        /**\n         * A display name for the activity.\n         */\n        get activityName() {\n            return this._activityName;\n        }\n        set activityName(val) {\n            const oldVal = this._activityName;\n            if (oldVal === val) {\n                return;\n            }\n            this._activityName = val;\n            this.stateChanged.emit(void 0);\n        }\n        /**\n         * The current client session associated with the kernel status indicator.\n         */\n        get sessionContext() {\n            return this._sessionContext;\n        }\n        set sessionContext(sessionContext) {\n            var _a, _b, _c, _d;\n            (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.statusChanged.disconnect(this._onKernelStatusChanged, this);\n            (_b = this._sessionContext) === null || _b === void 0 ? void 0 : _b.connectionStatusChanged.disconnect(this._onKernelStatusChanged, this);\n            (_c = this._sessionContext) === null || _c === void 0 ? void 0 : _c.kernelChanged.disconnect(this._onKernelChanged, this);\n            const oldState = this._getAllState();\n            this._sessionContext = sessionContext;\n            this._kernelStatus = sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelDisplayStatus;\n            this._kernelName = (_d = sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelDisplayName) !== null && _d !== void 0 ? _d : this._trans.__('No Kernel');\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.statusChanged.connect(this._onKernelStatusChanged, this);\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.connectionStatusChanged.connect(this._onKernelStatusChanged, this);\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelChanged.connect(this._onKernelChanged, this);\n            this._triggerChange(oldState, this._getAllState());\n        }\n        /**\n         * React to changes to the kernel status.\n         */\n        _onKernelStatusChanged() {\n            var _a;\n            this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n            this.stateChanged.emit(void 0);\n        }\n        /**\n         * React to changes in the kernel.\n         */\n        _onKernelChanged(_sessionContext, change) {\n            var _a;\n            const oldState = this._getAllState();\n            // sync setting of status and display name\n            this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n            this._kernelName = _sessionContext.kernelDisplayName;\n            this._triggerChange(oldState, this._getAllState());\n        }\n        _getAllState() {\n            return [this._kernelName, this._kernelStatus, this._activityName];\n        }\n        _triggerChange(oldState, newState) {\n            if (JSONExt.deepEqual(oldState, newState)) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    KernelStatus.Model = Model;\n})(KernelStatus || (KernelStatus = {}));\n//# sourceMappingURL=kernelStatus.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\nexport const lineFormSearch = style({\n    padding: '4px 12px',\n    backgroundColor: 'var(--jp-layout-color2)',\n    boxShadow: 'var(--jp-toolbar-box-shadow)',\n    zIndex: 2,\n    fontSize: 'var(--jp-ui-font-size1)'\n});\nexport const lineFormCaption = style({\n    fontSize: 'var(--jp-ui-font-size0)',\n    lineHeight: 'var(--jp-ui-font-size1)',\n    marginTop: '4px',\n    color: 'var(--jp-ui-font-color0)'\n});\nexport const baseLineForm = {\n    border: 'none',\n    borderRadius: '0px',\n    position: 'absolute',\n    backgroundSize: '16px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    outline: 'none',\n    top: '0px',\n    right: '0px'\n};\nexport const lineFormButtonDiv = style(baseLineForm, {\n    top: '4px',\n    right: '8px',\n    height: '24px',\n    padding: '0px 12px',\n    width: '12px'\n});\nexport const lineFormButtonIcon = style(baseLineForm, {\n    backgroundColor: 'var(--jp-brand-color1)',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '4px 6px'\n});\nexport const lineFormButton = style(baseLineForm, {\n    backgroundColor: 'transparent',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box'\n});\nexport const lineFormWrapper = style({\n    overflow: 'hidden',\n    padding: '0px 8px',\n    border: '1px solid var(--jp-border-color0)',\n    backgroundColor: 'var(--jp-input-active-background)',\n    height: '22px'\n});\nexport const lineFormWrapperFocusWithin = style({\n    border: 'var(--jp-border-width) solid var(--md-blue-500)',\n    boxShadow: 'inset 0 0 4px var(--md-blue-300)'\n});\nexport const lineFormInput = style({\n    background: 'transparent',\n    width: '200px',\n    height: '100%',\n    border: 'none',\n    outline: 'none',\n    color: 'var(--jp-ui-font-color0)',\n    lineHeight: '28px'\n});\n//# sourceMappingURL=lineForm.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ReactWidget, VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { lineFormIcon } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport { classes } from 'typestyle/lib';\nimport { interactiveItem, showPopup, TextItem } from '..';\nimport { lineFormButton, lineFormButtonDiv, lineFormButtonIcon, lineFormCaption, lineFormInput, lineFormSearch, lineFormWrapper, lineFormWrapperFocusWithin } from '../style/lineForm';\n/**\n * A component for rendering a \"go-to-line\" form.\n */\nclass LineFormComponent extends React.Component {\n    /**\n     * Construct a new LineFormComponent.\n     */\n    constructor(props) {\n        super(props);\n        /**\n         * Handle a change to the value in the input field.\n         */\n        this._handleChange = (event) => {\n            this.setState({ value: event.currentTarget.value });\n        };\n        /**\n         * Handle submission of the input field.\n         */\n        this._handleSubmit = (event) => {\n            event.preventDefault();\n            const value = parseInt(this._textInput.value, 10);\n            if (!isNaN(value) &&\n                isFinite(value) &&\n                1 <= value &&\n                value <= this.props.maxLine) {\n                this.props.handleSubmit(value);\n            }\n            return false;\n        };\n        /**\n         * Handle focusing of the input field.\n         */\n        this._handleFocus = () => {\n            this.setState({ hasFocus: true });\n        };\n        /**\n         * Handle blurring of the input field.\n         */\n        this._handleBlur = () => {\n            this.setState({ hasFocus: false });\n        };\n        this._textInput = null;\n        this.translator = props.translator || nullTranslator;\n        this._trans = this.translator.load('jupyterlab');\n        this.state = {\n            value: '',\n            hasFocus: false\n        };\n    }\n    /**\n     * Focus the element on mount.\n     */\n    componentDidMount() {\n        this._textInput.focus();\n    }\n    /**\n     * Render the LineFormComponent.\n     */\n    render() {\n        return (React.createElement(\"div\", { className: lineFormSearch },\n            React.createElement(\"form\", { name: \"lineColumnForm\", onSubmit: this._handleSubmit, noValidate: true },\n                React.createElement(\"div\", { className: classes(lineFormWrapper, 'lm-lineForm-wrapper', this.state.hasFocus ? lineFormWrapperFocusWithin : undefined) },\n                    React.createElement(\"input\", { type: \"text\", className: lineFormInput, onChange: this._handleChange, onFocus: this._handleFocus, onBlur: this._handleBlur, value: this.state.value, ref: input => {\n                            this._textInput = input;\n                        } }),\n                    React.createElement(\"div\", { className: lineFormButtonDiv },\n                        React.createElement(lineFormIcon.react, { className: lineFormButtonIcon, elementPosition: \"center\" }),\n                        React.createElement(\"input\", { type: \"submit\", className: lineFormButton, value: \"\" }))),\n                React.createElement(\"label\", { className: lineFormCaption }, this._trans.__('Go to line number between 1 and %1', this.props.maxLine)))));\n    }\n}\n/**\n * A pure functional component for rendering a line/column\n * status item.\n */\nfunction LineColComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: trans.__('Ln %1, Col %2', props.line, props.column), title: trans.__('Go to line number…') }));\n}\n/**\n * A widget implementing a line/column status item.\n */\nexport class LineCol extends VDomRenderer {\n    /**\n     * Construct a new LineCol status item.\n     */\n    constructor(translator) {\n        super(new LineCol.Model());\n        this._popup = null;\n        this.addClass(interactiveItem);\n        this.translator = translator || nullTranslator;\n    }\n    /**\n     * Render the status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(LineColComponent, { line: this.model.line, column: this.model.column, translator: this.translator, handleClick: () => this._handleClick() }));\n        }\n    }\n    /**\n     * A click handler for the widget.\n     */\n    _handleClick() {\n        if (this._popup) {\n            this._popup.dispose();\n        }\n        const body = ReactWidget.create(React.createElement(LineFormComponent, { handleSubmit: val => this._handleSubmit(val), currentLine: this.model.line, maxLine: this.model.editor.lineCount, translator: this.translator }));\n        this._popup = showPopup({\n            body: body,\n            anchor: this,\n            align: 'right'\n        });\n    }\n    /**\n     * Handle submission for the widget.\n     */\n    _handleSubmit(value) {\n        this.model.editor.setCursorPosition({ line: value - 1, column: 0 });\n        this._popup.dispose();\n        this.model.editor.focus();\n    }\n}\n/**\n * A namespace for LineCol statics.\n */\n(function (LineCol) {\n    /**\n     * A VDom model for a status item tracking the line/column of an editor.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            /**\n             * React to a change in the cursors of the current editor.\n             */\n            this._onSelectionChanged = () => {\n                const oldState = this._getAllState();\n                const pos = this.editor.getCursorPosition();\n                this._line = pos.line + 1;\n                this._column = pos.column + 1;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._line = 1;\n            this._column = 1;\n            this._editor = null;\n        }\n        /**\n         * The current editor of the model.\n         */\n        get editor() {\n            return this._editor;\n        }\n        set editor(editor) {\n            var _a;\n            const oldEditor = this._editor;\n            if ((_a = oldEditor === null || oldEditor === void 0 ? void 0 : oldEditor.model) === null || _a === void 0 ? void 0 : _a.selections) {\n                oldEditor.model.selections.changed.disconnect(this._onSelectionChanged);\n            }\n            const oldState = this._getAllState();\n            this._editor = editor;\n            if (!this._editor) {\n                this._column = 1;\n                this._line = 1;\n            }\n            else {\n                this._editor.model.selections.changed.connect(this._onSelectionChanged);\n                const pos = this._editor.getCursorPosition();\n                this._column = pos.column + 1;\n                this._line = pos.line + 1;\n            }\n            this._triggerChange(oldState, this._getAllState());\n        }\n        /**\n         * The current line of the model.\n         */\n        get line() {\n            return this._line;\n        }\n        /**\n         * The current column of the model.\n         */\n        get column() {\n            return this._column;\n        }\n        _getAllState() {\n            return [this._line, this._column];\n        }\n        _triggerChange(oldState, newState) {\n            if (oldState[0] !== newState[0] || oldState[1] !== newState[1]) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    LineCol.Model = Model;\n})(LineCol || (LineCol = {}));\n//# sourceMappingURL=lineCol.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { kernelIcon, terminalIcon } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport { GroupItem, interactiveItem, TextItem } from '..';\n/**\n * Half spacing between subitems in a status item.\n */\nconst HALF_SPACING = 4;\n/**\n * A pure functional component for rendering kernel and terminal sessions.\n *\n * @param props: the props for the component.\n *\n * @returns a tsx component for the running sessions.\n */\nfunction RunningSessionsComponent(props) {\n    return (React.createElement(GroupItem, { spacing: HALF_SPACING, onClick: props.handleClick },\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.terminals }),\n            React.createElement(terminalIcon.react, { left: '1px', top: '3px', stylesheet: 'statusBar' })),\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.sessions }),\n            React.createElement(kernelIcon.react, { top: '2px', stylesheet: 'statusBar' }))));\n}\n/**\n * A VDomRenderer for a RunningSessions status item.\n */\nexport class RunningSessions extends VDomRenderer {\n    /**\n     * Create a new RunningSessions widget.\n     */\n    constructor(opts) {\n        super(new RunningSessions.Model());\n        this._serviceManager = opts.serviceManager;\n        this._handleClick = opts.onClick;\n        this.translator = opts.translator || nullTranslator;\n        this._trans = this.translator.load('jupyterload');\n        this._serviceManager.sessions.runningChanged.connect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.connect(this._onTerminalsRunningChanged, this);\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the running sessions widget.\n     */\n    render() {\n        if (!this.model) {\n            return null;\n        }\n        // TODO-TRANS: Should probably be handled differently.\n        // This is more localizable friendly: \"Terminals: %1 | Kernels: %2\"\n        this.title.caption = this._trans.__('%1 Terminals, %2 Kernel sessions', this.model.terminals, this.model.sessions);\n        return (React.createElement(RunningSessionsComponent, { sessions: this.model.sessions, terminals: this.model.terminals, handleClick: this._handleClick }));\n    }\n    /**\n     * Dispose of the status item.\n     */\n    dispose() {\n        super.dispose();\n        this._serviceManager.sessions.runningChanged.disconnect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.disconnect(this._onTerminalsRunningChanged, this);\n    }\n    /**\n     * Set the number of kernel sessions when the list changes.\n     */\n    _onSessionsRunningChanged(manager, sessions) {\n        this.model.sessions = sessions.length;\n    }\n    /**\n     * Set the number of terminal sessions when the list changes.\n     */\n    _onTerminalsRunningChanged(manager, terminals) {\n        this.model.terminals = terminals.length;\n    }\n}\n/**\n * A namespace for RunningSessions statics.\n */\n(function (RunningSessions) {\n    /**\n     * A VDomModel for the RunningSessions status item.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            this._terminals = 0;\n            this._sessions = 0;\n        }\n        /**\n         * The number of active kernel sessions.\n         */\n        get sessions() {\n            return this._sessions;\n        }\n        set sessions(sessions) {\n            const oldSessions = this._sessions;\n            this._sessions = sessions;\n            if (oldSessions !== this._sessions) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n        /**\n         * The number of active terminal sessions.\n         */\n        get terminals() {\n            return this._terminals;\n        }\n        set terminals(terminals) {\n            const oldTerminals = this._terminals;\n            this._terminals = terminals;\n            if (oldTerminals !== this._terminals) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    RunningSessions.Model = Model;\n})(RunningSessions || (RunningSessions = {}));\n//# sourceMappingURL=runningSessions.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate, DisposableSet } from '@lumino/disposable';\nimport { Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { statusBar as barStyle, item as itemStyle, leftSide as leftSideStyle, rightSide as rightSideStyle, side as sideStyle } from './style/statusbar';\n/**\n * Main status bar object which contains all items.\n */\nexport class StatusBar extends Widget {\n    constructor() {\n        super();\n        this._leftRankItems = [];\n        this._rightRankItems = [];\n        this._statusItems = {};\n        this._disposables = new DisposableSet();\n        this.addClass(barStyle);\n        const rootLayout = (this.layout = new PanelLayout());\n        const leftPanel = (this._leftSide = new Panel());\n        const middlePanel = (this._middlePanel = new Panel());\n        const rightPanel = (this._rightSide = new Panel());\n        leftPanel.addClass(sideStyle);\n        leftPanel.addClass(leftSideStyle);\n        middlePanel.addClass(sideStyle);\n        rightPanel.addClass(sideStyle);\n        rightPanel.addClass(rightSideStyle);\n        rootLayout.addWidget(leftPanel);\n        rootLayout.addWidget(middlePanel);\n        rootLayout.addWidget(rightPanel);\n    }\n    /**\n     * Register a new status item.\n     *\n     * @param id - a unique id for the status item.\n     *\n     * @param statusItem - The item to add to the status bar.\n     */\n    registerStatusItem(id, statusItem) {\n        if (id in this._statusItems) {\n            throw new Error(`Status item ${id} already registered.`);\n        }\n        // Populate defaults for the optional properties of the status item.\n        const fullStatusItem = Object.assign(Object.assign({}, Private.statusItemDefaults), statusItem);\n        const { align, item, rank } = fullStatusItem;\n        // Connect the activeStateChanged signal to refreshing the status item,\n        // if the signal was provided.\n        const onActiveStateChanged = () => {\n            this._refreshItem(id);\n        };\n        if (fullStatusItem.activeStateChanged) {\n            fullStatusItem.activeStateChanged.connect(onActiveStateChanged);\n        }\n        const rankItem = { id, rank };\n        fullStatusItem.item.addClass(itemStyle);\n        this._statusItems[id] = fullStatusItem;\n        if (align === 'left') {\n            const insertIndex = this._findInsertIndex(this._leftRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._leftSide.addWidget(item);\n                this._leftRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._leftRankItems, insertIndex, rankItem);\n                this._leftSide.insertWidget(insertIndex, item);\n            }\n        }\n        else if (align === 'right') {\n            const insertIndex = this._findInsertIndex(this._rightRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._rightSide.addWidget(item);\n                this._rightRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._rightRankItems, insertIndex, rankItem);\n                this._rightSide.insertWidget(insertIndex, item);\n            }\n        }\n        else {\n            this._middlePanel.addWidget(item);\n        }\n        this._refreshItem(id); // Initially refresh the status item.\n        const disposable = new DisposableDelegate(() => {\n            delete this._statusItems[id];\n            if (fullStatusItem.activeStateChanged) {\n                fullStatusItem.activeStateChanged.disconnect(onActiveStateChanged);\n            }\n            item.parent = null;\n            item.dispose();\n        });\n        this._disposables.add(disposable);\n        return disposable;\n    }\n    /**\n     * Dispose of the status bar.\n     */\n    dispose() {\n        this._leftRankItems.length = 0;\n        this._rightRankItems.length = 0;\n        this._disposables.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle an 'update-request' message to the status bar.\n     */\n    onUpdateRequest(msg) {\n        this._refreshAll();\n        super.onUpdateRequest(msg);\n    }\n    _findInsertIndex(side, newItem) {\n        return ArrayExt.findFirstIndex(side, item => item.rank > newItem.rank);\n    }\n    _refreshItem(id) {\n        const statusItem = this._statusItems[id];\n        if (statusItem.isActive()) {\n            statusItem.item.show();\n            statusItem.item.update();\n        }\n        else {\n            statusItem.item.hide();\n        }\n    }\n    _refreshAll() {\n        Object.keys(this._statusItems).forEach(id => {\n            this._refreshItem(id);\n        });\n    }\n}\n/**\n * A namespace for private functionality.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Default options for a status item, less the item itself.\n     */\n    Private.statusItemDefaults = {\n        align: 'left',\n        rank: 0,\n        isActive: () => true,\n        activeStateChanged: undefined\n    };\n})(Private || (Private = {}));\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n// tslint:disable-next-line:variable-name\nexport const IStatusBar = new Token('@jupyterlab/statusbar:IStatusBar');\n//# sourceMappingURL=tokens.js.map"],"names":["centeredFlex","display","alignItems","leftToRight","flexDirection","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","groupItemLayout","GroupItem","props","spacing","children","className","rest","numChildren","assign","child","style","marginRight","marginLeft","margin","textItem","fontSize","fontFamily","lineHeight","color","itemPadding","paddingLeft","paddingRight","interactiveHover","$nest","backgroundColor","clicked","statusBar","background","minHeight","justifyContent","side","leftSide","rightSide","maxHeight","height","whiteSpace","textOverflow","clickedItem","interactiveItem","hoverItem","boxShadow","showPopup","options","dialog","Popup","startHidden","launch","Widget","constructor","super","this","_body","body","addClass","_anchor","anchor","_align","align","hasDynamicSize","_observer","ResizeObserver","update","layout","PanelLayout","addWidget","node","addEventListener","_setGeometry","document","removeClass","onUpdateRequest","msg","onAfterAttach","_a","window","observe","onBeforeDetach","disconnect","removeEventListener","onResize","dispose","handleEvent","event","type","_evtKeydown","_evtClick","target","contains","keyCode","stopPropagation","preventDefault","aligned","anchorRect","getBoundingClientRect","bodyRect","width","getComputedStyle","HoverBox","host","offset","horizontal","privilege","ProgressBar","percentage","role","Filler","contentWidth","content","TextItem","title","source","ProgressCircle","progress","viewBox","cx","cy","r","stroke","strokeWidth","fill","transform","d","angle","Math","max","rad","PI","x","sin","y","cos","toFixed","KernelStatusComponent","trans","translator","nullTranslator","load","statusText","status","onClick","handleClick","kernelName","__","activityName","KernelStatus","VDomRenderer","opts","Model","_handleClick","render","model","VDomModel","_activityName","_kernelStatus","_sessionContext","_trans","_kernelName","_statusNames","translateKernelStatuses","undefined","val","stateChanged","emit","sessionContext","_b","_c","_d","statusChanged","_onKernelStatusChanged","connectionStatusChanged","kernelChanged","_onKernelChanged","oldState","_getAllState","kernelDisplayStatus","kernelDisplayName","connect","_triggerChange","change","newState","JSONExt","lineFormSearch","padding","zIndex","lineFormCaption","marginTop","baseLineForm","border","borderRadius","position","backgroundSize","backgroundRepeat","backgroundPosition","outline","top","right","lineFormButtonDiv","lineFormButtonIcon","boxSizing","lineFormButton","lineFormWrapper","overflow","lineFormWrapperFocusWithin","lineFormInput","LineFormComponent","_handleChange","setState","value","currentTarget","_handleSubmit","parseInt","_textInput","isNaN","isFinite","maxLine","handleSubmit","_handleFocus","hasFocus","_handleBlur","state","componentDidMount","focus","name","onSubmit","noValidate","onChange","onFocus","onBlur","ref","input","lineFormIcon","elementPosition","LineColComponent","line","column","LineCol","_popup","ReactWidget","currentLine","editor","lineCount","setCursorPosition","arguments","_onSelectionChanged","pos","getCursorPosition","_line","_column","_editor","oldEditor","selections","changed","HALF_SPACING","RunningSessionsComponent","terminals","terminalIcon","left","stylesheet","sessions","kernelIcon","RunningSessions","_serviceManager","serviceManager","runningChanged","_onSessionsRunningChanged","_onTerminalsRunningChanged","caption","manager","_terminals","_sessions","oldSessions","oldTerminals","Private","StatusBar","_leftRankItems","_rightRankItems","_statusItems","_disposables","DisposableSet","rootLayout","leftPanel","_leftSide","Panel","middlePanel","_middlePanel","rightPanel","_rightSide","registerStatusItem","id","statusItem","Error","fullStatusItem","statusItemDefaults","item","rank","onActiveStateChanged","_refreshItem","activeStateChanged","rankItem","insertIndex","_findInsertIndex","push","ArrayExt","insertWidget","disposable","DisposableDelegate","parent","add","_refreshAll","newItem","isActive","show","hide","keys","forEach","IStatusBar","Token"],"sourceRoot":""}